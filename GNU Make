
ابزار GNU Make
   GNU Make  ابزاری است  که نسل اجرایی و  عیر اجرایی دیگر فایلهای یک برنامه را از سورس فایلهای برنامه کنترل میکند.

Make gets دانش بیلد کردن برنامه شما از  فایلی به نام makefile  است که فایلهای بدون سورس وچگونه محاسبه کردن ان از فایلهای دیگر را لیست میکند.وقتی شما یک برنامه مینویسید  بایستی یک makefileبرای آن بنویسید به صورتی که ممکن است برای بیلد کردن و نصب برنامه از make استفاده کنید   

قابلیت های Make

Make آخرین user را برای بیلد کردن و نصب پکیج شما بدون دانستن جزییات چگونه انجام شدن وارد میکند 

make به صورت اتوماتیک براساس اسنکه کدام سورس فایلها تغییر یافته اند متوجه میشود کدام فایلهای آن نیاز به به روز رسانی دارند .make به صورت اتوماتیک تعیین میکند نظم مناسبی برای به روز رسانی فایل ها .برای نمونه یک فایل بدون سورس به دیگر فایل بدون سورس وابسته است 
<<<<<<< HEAD
=======

به عنوان نتیجه اگر تعداد کمی سورس فایل را تغییر دهید و سپس make را اجرا کنید نیازی به کامپایل همهی برنامه های شما نیست.make فقط فایل های بدون سورس که مستقیما یا بصورت عیر مستقیم  در سورس فایل هایی که شما تعییر داده اید را به روز رسانی میکند.
Make is not limited to any particular language. For each non-source file in the program, the makefile specifies the shell commands to compute it. These shell commands can run a compiler to produce an object file, the linker to produce an executable, ar to update a library, or TeX or Makeinfo to format documentation.
Make is not limited to building a package. You can also use Make to control installing or deinstalling a package, generate tags tables for it, or anything else you want to do often enough to make it worth while writing down how to do it.
Make Rules and Targets
A rule in the makefile tells Make how to execute a series of commands in order to build a target file from source files. It also specifies a list of dependencies of the target file. This list should include all files (whether source files or other targets) which are used as inputs to the commands in the rule.
>>>>>>> 42b401d (translate and remove line 12)

به عنوان نتیجه اگر تعداد کمی سورس فایل را تغییر دهید و سپس make را اجرا کنید نیازی به کامپایل همهی برنامه های شما نیست.make فقط فایل های بدون سورس که مستقیما یا بصورت عیر مستقیم  در سورس فایل هایی که شما تعییر داده اید را به روز رسانی میکند.


make به زبان خاصی محدود نیست. برای هر فایل بدون سورس در برنامه فایل make دستورات shell را برای محاسبه آن مشخص میکند. کامند های shell میتوانند برای ایجاد یک object file یک کامپایلر اجرا کنندو میتوانند پیوند دهنده برای تولید یک فایل قابل اجرا باشند  یا میتوانند یک کتابخانه را اپدیت کنند یا tex یا makeinfo کنند برای فرمت داکیومنت

make محدود به ساختن یک پکیج نیست.شما میتوانید از make برای کنترل نصب و حذف نصب یک پکیچ  و تولید جداول تگ ها یا هر چیز دیگری که شما میخواهید انجام دهید  اعلب کافیست برای اینکه ان را بدتر کنید  زمانی که مینویسد که  چگونه انجام شود استفاده کنید

قانون ها و اهداف make

یک قانون در فایل make میگوید make چگونه یک سری از دستورات را برای build کردن یک فایل هدف از سورس فایل اجرا کند.همچنین  یک لیست از وابستگی های فایل هدف را مشخص میکند .این لیست باید همه ی فایل هایی(چه سورس فایل ها چه دیگر هدف ها) که به عنوان ورودی هایی برای کامند ها در قانون استفاده میشود را شامل شود.


اینجا یک قانون ساده هست شبیه:


          هدف:وابستگی ها ...
          دستورات
          ...
          

وقتی شما make را اجرا میکنید میتوانید اهداف خاص را برای به روز رسانی مشخص میکند در عیر اینصورت make اولین هدفی که در فایل make لیست شده است را آبدیت میکند.هر فایل هدف دیگری نیاز دارد  به عنوان ورودی برای تولید این اهداف ابتدا به روز رسانی شود. 


make از فایل make استفاده میکند برای محاسبه اینکه کدام فایل ها باید به روز خریداری شوند و سپس 
تعیین میکند کدام یک ار آنها نیاز به به روزرسانی دارند . اگر یک فایل هدف جدید تر از همه ی فایل های هدفی که به آن وابسته اند باشد و سپس اماده به روز شدن باشد و نیاز به تولید دوباره نداشته باشد . بقیه فایل های هدف نیاز به به روز رسانی دارند اما در ترتیب مناسب یعنی هر فایل هدفی باید دوباره تولید شود قبل از اینکهدر تولید ذوباره هدف های دیگر استفاده شود.

مزیت های GNU Make

GNUE Make ویژگی های قدرتمند زیادی برای استفاده در فایل های make دارد فراتر از چیزی که بقیه ورژن های make دارند. همچنین میتواند  فایل های متوسطی که نیاز به ذخیره ندارند را  بازسازی استفاده و سپس حذف کند.


GNUE Make همچنین ویژگی های ساده ای دارد که بسیار راحت هستند. برای مثال گزینه ی فایل -o میگوید '' تظاهر میکند که سورس فایل تعییر ندارد با وجود اینکه تعییر کرده است.این بشدت مفیده  وقتی شما یک ماکرو جدید به فایل سرتیتر اضافه میکنید. بیشتر ورژن های make فرض خواهند کرد که باید دوباره کامپایل کنند همه ی سورس فایل هایی که استفاده میکنند فایل سر تیتر را اما GNU Make به شما راهی میدهد برای جلو گیری از کامپایل دوباره  به عنوان نمونه جایی که شما میداهید تعییر شما به فایل هدر به آن نیاز ندارد.


اگرچه مهمترین تفاوت میان GNU Make و بیشتر ورژن های Make, GNU MAke ایست که نرم افزار متن باز است.


فایل های Make و قرارداد


ما قرارداد های توسعه بافته ای  داریم برای چگونه نوشتن فایل های Make که همه ی  پکیج های GNU باید دنبال شوند. ایده ی خوبی است دنبال کردن این قرار داد ها در برنامه شما حتی اگر شما نمی خواهید ان نرم افزار GNU باشد بنابراین ان کاربرها قادر خواهند بود تا پکیج شما را بیلد کنند درست مثل بقیه پکیج های دیگر و احتیاچ نجواهد داشت تا هر چیزخاصی را قبل از انجام دادن بیاموزد. 


این قرارداد ها در بخش Makefile conventions از استاندارد های کدینگ GNU پیدا شده اند.


دانلود کردن Make

Make میتواند در سرور اصلی GNU ftp : http://ftp.gnu.org/gnu/make/ (via HTTP) و ftp://ftp.gnu.org/gnu/make/ (via FTP) پیدا شود. همچنین میتواند در GNU mirrors یافت شود.لطفا از mirror استفاده کنید اگر ممکن است.

 
مستند سازی

مستند سازی برای make بصورت انلاین در دسترس است همانطوری که برای بیشتر نرم افزار های GNU در دسترس است. ممکن است شما اطلاعات بیشتری درباره ی make بوسیله ی اجرای اطلاعات make یا man make یا بوسیله ی نکاه کردن به at /usr/share/doc/make/, /usr/local/doc/make/ یا دایرکتوری های مشابه در سیستم سما متوجه بشوید. یک خلاصه ی مختصر در دسترس است با اجرای دستور make --help 

لیست های پستی 

 make لیست های پستی زیر را دارد:

bug-make استفاده میشود برای بحث روی بیشتر جنبه های make و شامل توسعه و افزایش درخواست ها همچنین گزارش باگ ها میشود

help-make برای کمک به کار عمومی و گفتگو است

اعلامیه درباره ی make و بیشتر نرم افزار GNU هایی که ساخته میشوند در info-gnu.(آرشیو)


گزارش های امنیتی که نباید فورا عمومی ساخته بشوند میتوانند مستقیما به نگهدارنده فرستاده شوند.


درگیرشدن

توسعه make و GNU به طور کلی یک تاثیر داوظلبانه است و شما میتوانید مشارکت کنید .برای اظلاعات لطفا چگونه به GNU کمک کردن را بخوانید. اگر شما مایلید که درگیر شوید ایده ی خوبی است که در گفتگو ی لیست های پستی عضو شوید.(بالا را بخوانید)


انتسار آزمایشی

تلاش برای آخرین انتشار آزمایشی (وقتی در دسترس است) همیشه قدردانی شونده است.انتشار آرمایشی make  میتواند در http://alpha.gnu.org/gnu/make/ (via HTTP) و ftp://alpha.gnu.org/gnu/make/ (via FTP).
پیدا شود.

توسعه

برای توسعه منابع و مسله یاب ها  و دیگر اطلاعات لطفا صفحه پروژه make در savannah.gnu.org. ببینید.

ترچمه make 

برای ترجمه ی پیام های make در زبان های دیگر لطفا صفحه پروژه ترجمه برای  make را ببینید. اگر یک ترجمه جدید از رشته های پیام  دارید یا به رسته های فعلی به روز رسانی میشود لطفا تغییرات ساخته شده در این مخزن را داشته باشید. تنها ترجمه ها از این سایت در make ادغام خواهد شد. برای اطلاعات بیشتر پروژه ترجمه را ببینید. 

نگه دارنده 

make در حال حاضر بوسیله پاول اسمیت نگهداری شده است. لطفا از لیست های پستی برای ارتباط استفاده کنید.

مجوز


make نرم افزار آزاد است . شما میتوانید دوباره ان را توزیع کنید ویا تغییر بدهید تحت شرایط لایسنس عمومی GNU که منتشر شده بوسیله ی بنیاد نرم افزار آزاد یا نسخه 3 لایسنس یا به دلخواه شما هر نسخه ی بعدی 
